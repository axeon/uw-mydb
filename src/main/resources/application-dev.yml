uw:
  mydb:
    stats:
      server-metrics: true
      schema-metrics: true
      client-metrics: true
      mysql-metrics: true
      slow-query-timeout: 3000
      metric-service:
        host:
        username:
        password:
        database:
        interval: 100000
      #es-service:

    server:
      ip: 0.0.0.0
      port: 3300
    users:
      root:
        password: "WR5QmENQQCHGCNps"
        schemas:
          - saas
        hosts:
          - .*
    mysql-groups:
      saas-host:                      # 复制组 名称   必须唯一
        group-type: SINGLE_NODE           # 复制类型
        switch-type: SWITCH              # 切换类型
        balance-type: BALANCE_ALL_READ   # 读写分离类型
        masters:
         - weight: 1 #读取访问权重，默认为1.如果master主机不想承担读，可以设置为0
           host: 192.168.88.88
           port: 3306                  # port
           user: root                  # 用户名
           password: AtqRpgPJN6bdZ!eT            # 密码
           min-conn: 20                   # 最小连接
           max-conn: 500                 # 最大连接
           max-retry: 3            # 连接重试次数
           conn-max-age: 3600       # 连接最长寿命(s)
           conn-idle-timeout: 180   # 最长空闲超时(s)
           conn-busy-timeout: 180   # 最长繁忙超时(s)
    schemas:
      saas:
        base-node: saas-host  # baseNode设置为mysqlGroup名，schema必须和database一致。
        tables:
          alitrip_hotel_info:
            route: saas
          alitrip_hotel_product:
            route: saas
          alitrip_hotel_room:
            route: saas
          hotel_info:
            route: hotel-info
          hotel_room:
            route: hotel-room
          hotel_info_supplier:
            route: hotel-supplier
          hotel_order:
            route: saas-year
          hotel_order_detail:
            route: saas-year
          hotel_order_notification:
            route: saas-year
          hotel_order_guest:
            route: saas-year
          hotel_product:
            route: saas
          hotel_product_price:
            route: product-price-month
          meituan_hotel_info:
            route: saas
          meituan_hotel_product:
            route: saas
          saas_file_info:
            route: saas
          saas_mch_info:
            route: saas
          saas_mch_credit:
            route: saas
          saas_mch_credit_log:
            route: saas-year
          saas_mch_payment:
            route: saas
          saas_mch_payment_log:
            route: saas
          saas_mch_receipt:
            route: saas
          saas_mch_receipt_log:
            route: saas
          saas_price_rule:
            route: saas
          saas_price_grade:
            route: saas
    routes:
      saas:   # 基于按saas分库的规则
        data-nodes:
          - mysql-group: saas-host
            db-config: [saas_$10000-10010]
        algorithms:
          - algorithm: uw.mydb.route.algorithm.RouteDatabaseByKey
            params: {prefix: "saas_"}
            route-key: saas_id
      saas-year:  # 基于按saas分库和按月分表的规则
        parent: saas # 继承父级配置
        algorithms:
          - algorithm: uw.mydb.route.algorithm.RouteTableByAutoDate
            params: {"format-pattern": "yyyy" }
            route-key: create_date
      product-price-month:  # 基于按saas分库和按月分表的规则
        parent: saas # 继承父级配置
        algorithms:
          - algorithm: uw.mydb.route.algorithm.RouteTableByAutoDate
            params: {"format-pattern": "yyyyMM" }
            route-key: price_date
      hotel-info:  # 基于area_id0自动分表的规则
        algorithms:
          - algorithm: uw.mydb.route.algorithm.RouteTableByAutoKey
            params: {"mysqlGroup": "saas-host","database": "saas_hotel"}
            route-key: area_id0
      hotel-room:  # 基于hotel_id自动分表的规则
        algorithms:
          - algorithm: uw.mydb.route.algorithm.RouteTableByHash
            params: {"routeList": "saas-host.saas_hotel.hotel_room_1,saas-host.saas_hotel.hotel_room_2,saas-host.saas_hotel.hotel_room_3,saas-host.saas_hotel.hotel_room_4,saas-host.saas_hotel.hotel_room_5,saas-host.saas_hotel.hotel_room_6,saas-host.saas_hotel.hotel_room_7,saas-host.saas_hotel.hotel_room_8"}
            route-key: hotel_id
      hotel-supplier:  # 基于supplier_id自动分表的规则
        algorithms:
          - algorithm: uw.mydb.route.algorithm.RouteTableByAutoKey
            params: {"mysqlGroup": "saas-host","database": "saas_hotel"}
            route-key: supplier_id
